## Random Search

import numpy as np

# random search function

def random_search(g,alpha_choice,max_its,w,num_samples):
    d = np.random.randn(num_samples,2) # run random search
   
    w_history = [w] # container for w history
    cost_history = [g(w)] # container for corresponding cost function history
    alpha = 0
    for k in range(1,max_its+1):
    # check if diminishing steplength rule used
        if alpha_choice == 'diminishing':
            alpha = 1/float(k)
        else:
            alpha = alpha_choice

        w_candiadte = w + alpha*d
        for i in w_candiadte:
            if g(i)<g(w):
                w = i
                w_history.append(w)
                cost_history.append(g(w))

    return w_history,cost_history
